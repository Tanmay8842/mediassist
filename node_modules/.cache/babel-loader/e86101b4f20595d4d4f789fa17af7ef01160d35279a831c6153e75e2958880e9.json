{"ast":null,"code":"import React,{useState}from'react';import{BrowserRouter as Router,Route,Routes}from'react-router-dom';import Navbar from'./components/Navbar';import Footer from'./components/Footer';import Home from'./components/Home';import Hospitals from'./components/Hospitals';import Medicals from'./components/Medicals';import Diagnostics from'./components/Diagnostics';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[searchResults,setSearchResults]=useState(null);const handleSearch=(query,filter)=>{// Implement logic to filter based on the query and filter\n// For demonstration, we'll just set some dummy data\nconst filteredResults={hospitals:[],medicals:[],diagnostics:[]};// Populate filteredResults based on query and filter\nsetSearchResults(filteredResults);};return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{onSearch:handleSearch}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/hospitals\",element:/*#__PURE__*/_jsx(Hospitals,{})}),/*#__PURE__*/_jsx(Route,{path:\"/medicals\",element:/*#__PURE__*/_jsx(Medicals,{})}),/*#__PURE__*/_jsx(Route,{path:\"/diagnostics\",element:/*#__PURE__*/_jsx(Diagnostics,{})})]}),/*#__PURE__*/_jsx(Footer,{})]})});}export default App;","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Navbar","Footer","Home","Hospitals","Medicals","Diagnostics","jsx","_jsx","jsxs","_jsxs","App","searchResults","setSearchResults","handleSearch","query","filter","filteredResults","hospitals","medicals","diagnostics","children","onSearch","path","exact","element"],"sources":["C:/Users/TANMAY/OneDrive/Desktop/mediassist/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Footer from './components/Footer';\r\nimport Home from './components/Home';\r\nimport Hospitals from './components/Hospitals';\r\nimport Medicals from './components/Medicals';\r\nimport Diagnostics from './components/Diagnostics';\r\n\r\nfunction App() {\r\n  const [searchResults, setSearchResults] = useState(null);\r\n\r\n  const handleSearch = (query, filter) => {\r\n    // Implement logic to filter based on the query and filter\r\n    // For demonstration, we'll just set some dummy data\r\n    const filteredResults = { hospitals: [], medicals: [], diagnostics: [] };\r\n\r\n    // Populate filteredResults based on query and filter\r\n    \r\n    setSearchResults(filteredResults);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Navbar onSearch={handleSearch} />\r\n        <Routes>\r\n          <Route path=\"/\" exact element={<Home />} />\r\n          <Route path=\"/hospitals\" element={<Hospitals />} />\r\n          <Route path=\"/medicals\" element={<Medicals />} />\r\n          <Route path=\"/diagnostics\" element={<Diagnostics />} />\r\n        </Routes>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAExD,KAAM,CAAAkB,YAAY,CAAGA,CAACC,KAAK,CAAEC,MAAM,GAAK,CACtC;AACA;AACA,KAAM,CAAAC,eAAe,CAAG,CAAEC,SAAS,CAAE,EAAE,CAAEC,QAAQ,CAAE,EAAE,CAAEC,WAAW,CAAE,EAAG,CAAC,CAExE;AAEAP,gBAAgB,CAACI,eAAe,CAAC,CACnC,CAAC,CAED,mBACET,IAAA,CAACV,MAAM,EAAAuB,QAAA,cACLX,KAAA,QAAAW,QAAA,eACEb,IAAA,CAACP,MAAM,EAACqB,QAAQ,CAAER,YAAa,CAAE,CAAC,cAClCJ,KAAA,CAACV,MAAM,EAAAqB,QAAA,eACLb,IAAA,CAACT,KAAK,EAACwB,IAAI,CAAC,GAAG,CAACC,KAAK,MAACC,OAAO,cAAEjB,IAAA,CAACL,IAAI,GAAE,CAAE,CAAE,CAAC,cAC3CK,IAAA,CAACT,KAAK,EAACwB,IAAI,CAAC,YAAY,CAACE,OAAO,cAAEjB,IAAA,CAACJ,SAAS,GAAE,CAAE,CAAE,CAAC,cACnDI,IAAA,CAACT,KAAK,EAACwB,IAAI,CAAC,WAAW,CAACE,OAAO,cAAEjB,IAAA,CAACH,QAAQ,GAAE,CAAE,CAAE,CAAC,cACjDG,IAAA,CAACT,KAAK,EAACwB,IAAI,CAAC,cAAc,CAACE,OAAO,cAAEjB,IAAA,CAACF,WAAW,GAAE,CAAE,CAAE,CAAC,EACjD,CAAC,cACTE,IAAA,CAACN,MAAM,GAAE,CAAC,EACP,CAAC,CACA,CAAC,CAEb,CAEA,cAAe,CAAAS,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}